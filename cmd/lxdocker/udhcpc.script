#!/bin/sh
# Busybox udhcpc dispatcher script.
# Copyright (C) 2009 by Axel Beckert.
# Copyright (C) 2014 by Michael Tokarev.
#
# Based on the busybox example scripts and the old udhcp source
# package default.* scripts.

# shellcheck disable=SC2154

alias busybox='/busybox-lxd'

RESOLV_CONF="/etc/resolv.conf"

ipaddr_opts=""
add_gatewayroute="0"

if [ "${LXDOCKER_UDHCPC_NOPREFIXROUTE:-}" = "1" ]; then
	ipaddr_opts="$ipaddr_opts noprefixroute"
	add_gatewayroute="1"
fi

log() {
	logger -t "udhcpc[$PPID]" -p "daemon.$1" "$interface: $2"
}

ip_prefix() {
	busybox ipcalc -p "$ip" "$subnet" | busybox sed -n 's/^PREFIX=\(.*\)/\/\1/p'
}

case $1 in
bound|renew)

	# Configure new IP address.
	# Do it unconditionally even if the address hasn't changed,
	# to also set subnet, broadcast, mtu, ...
	if [ -n "$mtu" ]; then
		busybox ip link set dev "$interface" "$mtu"
	fi
	# shellcheck disable=SC2086
	busybox ip address add "${ip}$(ip_prefix)" \
	        ${broadcast:+broadcast $broadcast} \
	        dev "$interface" \
		$ipaddr_opts

	# get current ("old") routes (after setting new IP)
	crouter=$(busybox ip -4 route show dev "$interface" |
		  busybox awk '$1 == "default" { print $3; }')
	router="${router%% *}" # linux kernel supports only one (default) route
	if [ ".$router" != ".$crouter" ]; then
		# reset just default routes
		busybox ip -4 route flush exact 0.0.0.0/0 dev "$interface"
	fi
	if [ -n "$router" ]; then
		# special case for /32 subnets: use onlink keyword
		[ ".$subnet" = .255.255.255.255 ] \
			&& onlink=onlink || onlink=

		if [ "$add_gatewayroute" = "1" ]; then
			busybox ip -4 route add "$router" dev "$interface"
		fi

		if [ "${UDHCPC_NO_DEFAULT_ROUTE:-}" != "1" ]; then
			# shellcheck disable=SC2086
			busybox ip -4 route add default via "$router" dev "$interface" $onlink
		fi
	fi

	if [ "${UDHCPC_NO_DNS:-}" != "1" ]; then
		# Update resolver configuration file
		[ -n "$domain" ] && R="domain $domain" || R=""
		for i in $dns; do
			R="$R
	nameserver $i"
		done

		if [ -x /sbin/resolvconf ]; then
			echo "$R" | resolvconf -a "$interface.udhcpc"
		else
			echo "$R" > "$RESOLV_CONF"
		fi
	fi

	log info "$1: IP=$ip/$subnet router=$router domain=\"$domain\" dns=\"$dns\" lease=$lease"
	;;

deconfig)
	busybox ip link set "$interface" up
	busybox ip -4 addr flush dev "$interface"
	busybox ip -4 route flush dev "$interface"

	if [ "${UDHCPC_NO_DNS:-}" != "1" ]; then
		[ -x /sbin/resolvconf ] &&
			resolvconf -d "$interface.udhcpc"
	fi

	log notice "deconfigured"
	;;

leasefail | nak)
	log err "configuration failed: $1: $message"
	;;

*)
	echo "$0: Unknown udhcpc command: $1" >&2
	exit 1
	;;
esac
